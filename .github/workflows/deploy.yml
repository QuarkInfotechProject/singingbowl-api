name: üöÄ Deploy Laravel API (Smart + Self-Healing)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy via SSH
    runs-on: ubuntu-latest

    env:
      DEBUG: true # Set to true for detailed SSH logging

    steps:
      # ======================================================
      # 1Ô∏è‚É£ CHECKOUT REPOSITORY
      # ======================================================
      - name: ‚è≥ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for proper git operations

      # ======================================================
      # 2Ô∏è‚É£ SETUP SSH
      # ======================================================
      - name: üîê Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SINGINGBOWL_SSH_PRIVATE_KEY }}

      # ======================================================
      # 3Ô∏è‚É£ DEPLOY TO VPS
      # ======================================================
      - name: üöÄ Deploy Laravel API
        env:
          VPS_USER: ${{ secrets.SINGINGBOWL_USER }}
          VPS_HOST: ${{ secrets.QUARK_VPS_HOST }}
          VPS_PORT: ${{ secrets.QUARK_VPS_PORT }}
          GIT_AUTH_TOKEN: ${{ secrets.GIT_AUTH_TOKEN }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
          DEBUG: ${{ env.DEBUG }}
          REPO_SLUG: ${{ github.repository }}
        run: |
          echo "üåç Connecting to VPS: $VPS_HOST:$VPS_PORT as $VPS_USER"
          echo "üìÇ Target Path: $DEPLOY_PATH"

          if [ "$DEBUG" = "true" ]; then
            echo "üß© DEBUG MODE ENABLED ‚Äî will print commands as they execute"
            set -x
          fi

          ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST -p $VPS_PORT "
            set -e

            echo 'üñ•Ô∏è Connected to:' \$(hostname)
            echo 'üì¶ Starting Laravel deployment in:' $DEPLOY_PATH

            # ================================
            # CHECK OR CREATE DEPLOYMENT DIRECTORY
            # ================================
            if [ ! -d '$DEPLOY_PATH' ]; then
              echo 'üìÅ Directory not found ‚Äî creating: $DEPLOY_PATH'
              mkdir -p '$DEPLOY_PATH'
              echo 'üÜï New deployment directory created.'
            fi
            cd '$DEPLOY_PATH'

            # ================================
            # GIT OPERATIONS
            # ================================
            echo 'üîÑ Updating repository...'
            if [ ! -d '.git' ]; then
              echo '‚ö†Ô∏è .git folder missing ‚Äî cloning repository fresh...'

              if [ -z '${GIT_AUTH_TOKEN}' ]; then
                echo '‚ùå ERROR: GIT_AUTH_TOKEN not set or invalid. Check your GitHub Secrets.'
                exit 1
              fi

              git clone https://x-access-token:${GIT_AUTH_TOKEN}@github.com/${REPO_SLUG}.git .
            else
              git fetch origin main
              git reset --hard origin/main
            fi

            # ================================
            # MOVE TO SYSTEM DIRECTORY (where artisan lives)
            # ================================
            if [ ! -d 'system' ]; then
              echo '‚ùå ERROR: Laravel system directory not found at $DEPLOY_PATH/system'
              exit 1
            fi

            cd system
            echo 'üìÇ Entered Laravel system directory: ' \$(pwd)

            # ================================
            # COMPOSER INSTALL
            # ================================
            echo 'üì¶ Installing Composer dependencies...'
            /usr/local/lsws/lsphp81/bin/php /usr/bin/composer install --no-interaction --prefer-dist --optimize-autoloader

            # ================================
            # ARTISAN COMMANDS
            # ================================
            echo '‚öôÔ∏è Running Laravel maintenance tasks...'
            /usr/local/lsws/lsphp81/bin/php artisan key:generate || true
            /usr/local/lsws/lsphp81/bin/php artisan migrate --force
            /usr/local/lsws/lsphp81/bin/php artisan optimize:clear
            /usr/local/lsws/lsphp81/bin/php artisan config:cache

            echo '‚úÖ Laravel deployment complete!'
            echo 'üìÖ Finished at:' \$(date)
          "

          if [ "$DEBUG" = "true" ]; then
            set +x
            echo "üß© DEBUG MODE DISABLED ‚Äî end of logs"
          fi
