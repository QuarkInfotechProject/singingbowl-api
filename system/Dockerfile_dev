FROM php:8.4-fpm-alpine3.20
LABEL version="1.0" license="MIT" maintainer="Manoj Malakar <manoj@squarebx.com>" app.name="GadgetByte Base Image"

ARG timezone
ARG COMPOSER_VERSION=2.7.9
ARG IMAGICK_VERSION=master

ENV TIMEZONE=${timezone:-"Asia/Kathmandu"}

# Install dependencies and PHP extensions
RUN apk add --no-cache \
    zip libzip-dev \
    gmp-dev \
    libxml2-dev \
    oniguruma-dev \
    freetype-dev \
    libjpeg-turbo-dev \
    libpng-dev \
    postgresql-dev \
    && docker-php-ext-install gmp zip mysqli pdo_mysql pdo_pgsql xml mbstring \
    && docker-php-ext-enable pdo_pgsql \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) gd

# Install additional extensions required by Laravel Excel
RUN apk add --no-cache $PHPIZE_DEPS \
    && pecl install xmlrpc-1.0.0RC3 \
    && docker-php-ext-enable xmlrpc \
    && docker-php-ext-install bcmath

# Install imagick
RUN apk add --no-cache imagemagick imagemagick-dev libgomp \
    && docker-php-source extract \
    && mkdir /usr/src/php/ext/imagick \
    && wget -O imagick.tar.gz https://codeload.github.com/Imagick/imagick/tar.gz/${IMAGICK_VERSION} \
    && tar xfz imagick.tar.gz --strip-components=1 -C /usr/src/php/ext/imagick \
    && docker-php-ext-configure imagick \
    && docker-php-ext-install -j$(nproc) imagick \
    && rm -f imagick.tar.gz \
    && docker-php-source delete

#Setup nginx git supervisor composer
RUN apk add --no-cache nginx bash git supervisor \
    && mkdir -p /etc/supervisor.d/ \
    && wget -nv -O /usr/local/bin/composer https://github.com/composer/composer/releases/download/${COMPOSER_VERSION}/composer.phar \
    && chmod u+x /usr/local/bin/composer


#setup timezone
RUN apk add tzdata \
    && cd /usr/local/etc/php \
    # - config PHP
    && { \
        echo "upload_max_filesize=100M"; \
        echo "memory_limit=1024M"; \
        echo "post_max_size=100M";\
        echo "date.timezone=${TIMEZONE}"; \
    } | tee conf.d/99_overrides.ini \
    && ln -sf /usr/share/zoneinfo/${TIMEZONE} /etc/localtime \
    && echo "${TIMEZONE}" > /etc/timezone

# check php version
RUN php -v \
    && php -m \
    && rm -rf /var/cache/apk/* /tmp/* /usr/share/man \
    && docker-php-source delete \
    #&& apk del .build-deps \
    && echo -e "\033[42;37m Build Completed :).\033[0m\n"

RUN addgroup -g 1000 -S gbn
RUN adduser -u 1000 -S -G gbn gbn

# Configure php-fpm & nginx
RUN mkdir -p /run/php/ \
    && touch /run/php/php-fpm.sock \
    && mkdir -p /run/nginx/ \
    && touch /run/nginx/nginx.pid \
    && ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log \
    && rm /usr/local/etc/php-fpm.d/zz-docker.conf \
    && chown -Rf gbn:gbn \
    /run/nginx/nginx.pid \
    /var/log/nginx \
    /var/lib/nginx \
    /run/php \
    && chmod g+wx /var/log/

#RUN apt clean

COPY system/.docker/fpm/php-fpm.conf /usr/local/etc/php-fpm.conf
COPY system/.docker/fpm/www.conf /usr/local/etc/php-fpm.d/www.conf
COPY system/.docker/fpm/fastcgi-php.conf /etc/nginx/fastcgi-php.conf
COPY system/.docker/supervisord.ini /etc/supervisor.d/supervisord.ini
COPY system/.docker/nginx/nginx.conf /etc/nginx/nginx.conf
COPY system/.docker/nginx/default.conf /etc/nginx/http.d/default.conf

WORKDIR /opt/www/

COPY system/startdev.sh .
# cleanup
RUN #rm -rf system/storage/var/cache/apk/* /tmp/* /usr/share/man

RUN chown -Rf gbn:gbn /opt/www \
    && chmod +x startdev.sh
USER gbn

EXPOSE 8000
CMD ["sh", "startdev.sh"]
